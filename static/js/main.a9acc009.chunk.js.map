{"version":3,"sources":["Calc.js","Buttons.js","App.js","serviceWorker.js","index.js"],"names":["Calc","props","handleOperator","bind","handleDot","handleClick","handleClear","handleEquals","state","display","operation","event","text","this","setState","target","value","indexOf","match","length","string","toString","test","replace","slice","charAt","num","eval","e","console","errorg","lineNumber","error","message","onDot","onClick","onClear","onEqual","onOperator","React","Component","Buttons","id","className","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a9acc009.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Buttons from \"./Buttons\";\r\n\r\nclass Calc extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleOperator = this.handleOperator.bind(this);\r\n    this.handleDot = this.handleDot.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.handleEquals = this.handleEquals.bind(this);\r\n\r\n    this.state = {\r\n      display: \"0\",\r\n      operation: \"\",\r\n    };\r\n  }\r\n  handleClick(event) {\r\n    var text = this.state.display;\r\n    if (text === \"0\") {\r\n      this.setState({\r\n        display: event.target.value,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        display: (text += event.target.value),\r\n      });\r\n    }\r\n  }\r\n  handleDot(event) {\r\n    var text = this.state.display;\r\n\r\n    if (text.indexOf(\".\") === -1) {\r\n      this.setState({\r\n        display: (text += event.target.value),\r\n      });\r\n    } else if (\r\n      text.indexOf(\"+\") !== -1 ||\r\n      text.indexOf(\"-\") !== -1 ||\r\n      text.indexOf(\"/\") !== -1 ||\r\n      text.indexOf(\"*\") !== -1\r\n    ) {\r\n      if (text.match(/\\./gi).length < 2) {\r\n        this.setState({\r\n          display: (text += event.target.value),\r\n        });\r\n      }\r\n    }\r\n  }\r\n  handleOperator(event) {\r\n    var string = this.state.display.toString();\r\n    var reg = /\\/(\\+|-|\\*|\\/)|\\*(\\+|-|\\*|\\/)|-(\\+|-|\\*|\\/)|\\+(\\+|-|\\*|\\/)/g;\r\n\r\n    /*if (!reg.test(string)) {\r\n      this.setState({\r\n        display: (string += event.target.value),\r\n      });\r\n    } else if (string.indexOf(\"-\") === -1 && event.target.value === \"-\") {\r\n      this.setState({\r\n        display: (string += event.target.value),\r\n      });\r\n    } */\r\n    if (reg.test(string) === true) {\r\n      var regex = /\\+|-|\\*|\\//g;\r\n\r\n      var text = string.replace(regex, event.target.value);\r\n      this.setState({\r\n        display: text.slice(0, text.length - 1),\r\n      });\r\n    } else if (string.charAt(string.length - 1) !== event.target.value) {\r\n      this.setState({\r\n        display: (string += event.target.value),\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClear() {\r\n    this.setState({\r\n      display: \"0\",\r\n    });\r\n  }\r\n  handleEquals() {\r\n    try {\r\n      var num = eval(this.state.display);\r\n    } catch (e) {\r\n      console.errorg(e.lineNumber);\r\n      console.error(e.message);\r\n    }\r\n    this.setState({\r\n      display: num,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Buttons\r\n          onDot={this.handleDot}\r\n          onClick={this.handleClick}\r\n          display={this.state.display}\r\n          onClear={this.handleClear}\r\n          onEqual={this.handleEquals}\r\n          onOperator={this.handleOperator}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calc;\r\n","import React from \"react\";\r\nimport \"./buttons.css\";\r\n\r\nclass Buttons extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"pad\">\r\n        <div id=\"display\">{this.props.display}</div>\r\n        <button id=\"clear\" onClick={this.props.onClear}>\r\n          AC\r\n        </button>\r\n        <button\r\n          value=\"/\"\r\n          id=\"divide\"\r\n          onClick={this.props.onOperator}\r\n          className=\"operation\"\r\n        >\r\n          /\r\n        </button>\r\n        <button\r\n          value=\"*\"\r\n          id=\"multiply\"\r\n          className=\"operation\"\r\n          onClick={this.props.onOperator}\r\n        >\r\n          *\r\n        </button>\r\n        <button\r\n          value={7}\r\n          id=\"seven\"\r\n          onClick={this.props.onClick}\r\n          className=\"number\"\r\n        >\r\n          7\r\n        </button>\r\n        <button\r\n          id=\"eight\"\r\n          value={8}\r\n          className=\"number\"\r\n          onClick={this.props.onClick}\r\n        >\r\n          8\r\n        </button>\r\n        <button\r\n          id=\"nine\"\r\n          value={9}\r\n          className=\"number\"\r\n          onClick={this.props.onClick}\r\n        >\r\n          9\r\n        </button>\r\n        <button\r\n          value=\"-\"\r\n          id=\"subtract\"\r\n          className=\"operation\"\r\n          onClick={this.props.onOperator}\r\n        >\r\n          -\r\n        </button>\r\n        <button\r\n          id=\"four\"\r\n          value={4}\r\n          className=\"number\"\r\n          onClick={this.props.onClick}\r\n        >\r\n          4\r\n        </button>\r\n        <button\r\n          id=\"five\"\r\n          value={5}\r\n          className=\"number\"\r\n          onClick={this.props.onClick}\r\n        >\r\n          5\r\n        </button>\r\n        <button\r\n          id=\"six\"\r\n          value={6}\r\n          className=\"number\"\r\n          onClick={this.props.onClick}\r\n        >\r\n          6\r\n        </button>\r\n        <button\r\n          value=\"+\"\r\n          id=\"add\"\r\n          className=\"operation\"\r\n          onClick={this.props.onOperator}\r\n        >\r\n          +\r\n        </button>\r\n        <button\r\n          id=\"one\"\r\n          value={1}\r\n          className=\"number\"\r\n          onClick={this.props.onClick}\r\n        >\r\n          1\r\n        </button>\r\n        <button\r\n          id=\"two\"\r\n          value={2}\r\n          className=\"number\"\r\n          onClick={this.props.onClick}\r\n        >\r\n          2\r\n        </button>\r\n        <button\r\n          id=\"three\"\r\n          value={3}\r\n          className=\"number\"\r\n          onClick={this.props.onClick}\r\n        >\r\n          3\r\n        </button>\r\n        <button id=\"equals\" className=\"number\" onClick={this.props.onEqual}>\r\n          =\r\n        </button>\r\n        <button\r\n          id=\"zero\"\r\n          value={0}\r\n          className=\"number\"\r\n          onClick={this.props.onClick}\r\n        >\r\n          0\r\n        </button>\r\n        <button\r\n          value=\".\"\r\n          id=\"decimal\"\r\n          className=\"number\"\r\n          onClick={this.props.onDot}\r\n        >\r\n          .\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Buttons;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Calc from \"./Calc\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calc />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}